//
//  WeatherUpKit.swift
//  WeatherUp
//
//  Created by charmaex on 02.04.16.
//  Copyright (c) 2016 charmaex. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

import UIKit

open class WeatherUpKit: NSObject {

	/// / Drawing Methods

	open class func drawCanvas1(frame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), arrowColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000), arrowValue: CGFloat = 0) {
		/// / General Declarations
		let context = UIGraphicsGetCurrentContext()

		/// / Variable Declarations
		let arrowCalc: CGFloat = arrowValue * 90
		let upper: CGFloat = arrowCalc + 45
		let lower: CGFloat = -arrowCalc - 45

		/// / Subframes
		let group: CGRect = CGRect(x: frame.minX + 5, y: frame.minY + 5, width: frame.width - 10, height: frame.height - 10)

		/// / Group
		context?.saveGState()
		context?.beginTransparencyLayer(auxiliaryInfo: nil)

		/// / Clip Mask
		let maskPath = UIBezierPath(ovalIn: CGRect(x: group.minX + floor(group.width * 0.00000 + 0.5), y: group.minY + floor(group.height * 0.00000 + 0.5), width: floor(group.width * 1.00000 + 0.5) - floor(group.width * 0.00000 + 0.5), height: floor(group.height * 1.00000 + 0.5) - floor(group.height * 0.00000 + 0.5)))
		maskPath.addClip()

		/// / Arrow Drawing
		let arrowRect = CGRect(x: group.minX + floor(group.width * -0.03333 + 0.5), y: group.minY + floor(group.height * -0.03333 + 0.5), width: floor(group.width * 1.03333 + 0.5) - floor(group.width * -0.03333 + 0.5), height: floor(group.height * 1.03333 + 0.5) - floor(group.height * -0.03333 + 0.5))
		let arrowPath = UIBezierPath()
		arrowPath.addArc(withCenter: CGPoint(x: arrowRect.midX, y: arrowRect.midY), radius: arrowRect.width / 2, startAngle: -lower * CGFloat(M_PI) / 180, endAngle: -upper * CGFloat(M_PI) / 180, clockwise: true)
		arrowPath.addLine(to: CGPoint(x: arrowRect.midX, y: arrowRect.midY))
		arrowPath.close()

		arrowColor.setStroke()
		arrowPath.lineWidth = 2
		arrowPath.stroke()

		context?.endTransparencyLayer()
		context?.restoreGState()
	}
}
